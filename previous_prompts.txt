    # user_input = "Use the Wikipedia API to search for the most popular tourist attractions in Paris, France. Display the top 5 results along with a brief description in the terminal."
    # user_input = "Monitor the International Space Station's (ISS) location in real time and display its position relative to my current location on Earth."
    # user_input = "Use very concise code to draw a blue circle inside of a light blue square and save it locally."
    # user_input = "Download and store locally one real cat meme. Don't use APIs."
    # user_input = "What's the most recent tweet from Elon Musk? Don't use APIs."
    # user_input = "Make a histogram of the number of times each of the top 10 words appear in the text of the Wikipedia page for the Olympics. Store the histogram locally."
    # user_input = "Count the number of times the word 'the' appears in the text of the Wikipedia page for the International Space Station."
    # user_input = "Find an image of the current weather in Philadelphia, Pennsylvania. Store the image and the script you used to generate it in the locally."
    # user_input = "Write a python script to solve the following without the need for any API keys: Find an image of the current weather in Philadelphia, Pennsylvania. Store the image locally."
#     user_input = """Can you write a program that takes YAML input data and outputs it in a specific table dictionary?
#     - The output format will allow for tracking progress toward lifetime goals over time, broken down by periods (e.g. `half decades`, `years`). 
#     - Each period only has one goal per top-level objective (i.e. `family` or `kin`).
#     - The program should be able to handle YAML input with any number of periods (for instance, multiple quarters within each year) and any granularity of periods (including periods like `days` or `decades`). 
#     - Headers should be generated automatically based on the data, NOT hardcoded.
#     - Use clean, concise code.

# Example of what YAML data might look like:
# ```
# # State represents completion as an integer 0-5. 0 for primary and secondary goals. 5 is fully incomplete and 1 is fully complete.
# input_data = '''
# Lifetime:
#   1:
#     goal: family
#     half decades:
#       2020-2025:
#         goal: Jiuli & car; family visits; propose&wed, Dog, stars
#         state: 3
#         years:
#           2023:
#             goal: Experience Jiuli, vacay/qtr, stars, propose, JP
#             state: 4
#             quarters:
#               Q1:
#                 goal: Jiuli MVP, plan 1 vacay (Thailand/stars?)
#                 state: 3
#                 months:
#                   January:
#                     goal: Screens, curtains, cleaning, Bed, TV stand
#                     state: 3
#                     weeks:
#                       W2:
#                         goal: Arrange screens & cleaning (12345), Brainstorm vacay
#                         state: 3
#                       W3:
#                         goal: Windowscreens (call 12345), shortlist hotels & dates
#                         state: 3
#   2:
#     goal: kin
#     half decades:
#       2020-2025:
#         goal: Visit good friends, Dinner parties, Dex, Annual Letters
#         state: 4
#         years:
#           2023:
#             goal: Virtual visits? Dex? >=1 US trip
#             state: 4
#             quarters:
#               Q1:
#                 goal: 7 fishes, annual letter, CBS
#                 state: 4
#                 months:
#                   January:
#                     goal: letter draft, John, 7 fishes
#                     state: 3
#                     weeks:
#                       W2:
#                         goal: outline annual letter
#                         state: 2
#                       W3:
#                         goal: Annual letter 1 paragraph complete, Neel intros
#                         state: 4
# '''
# ```

# Expected table output for the example YAML data above should be equivalent to the following:
# ```
# expected_output = {
#     'Lifetime': ['family', 'kin'], 
#     '2020-2025': [
#         ['Jiuli & car; family visits; propose&wed, Dog, stars',3], 
#         ['Visit good friends, Dinner parties, Dex, Annual Letters',4]
#         ], 
#     '2023': [
#         ['Experience Jiuli, vacay/qtr, stars, propose, JP',4], 
#         ['Screens, curtains, cleaning, Bed, TV stand',3]
#         ], 
#     'Q1': [
#         ['Jiuli MVP, plan 1 vacay (Thailand/stars?)',3], 
#         ['7 fishes, annual letter, CBS',4]
#         ],
#     'January': [
#         ['Screens, curtains, cleaning, Bed, TV stand',3],
#         ['letter draft, John, 7 fishes',3]
#         ],
#     'W2': [
#     ['Arrange screens & cleaning (12345), Brainstorm vacay',3],
#     ['outline annual letter',2]
#     ],
#     'W3': [
#     ['Windowscreens (call 12345), shortlist hotels & dates',3],
#     ['Annual letter 1 paragraph complete, Neel intros',4]
#     ]
# }
# ```
# """